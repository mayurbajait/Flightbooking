{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction inputContainer(Input) {\n  var WrappedInput =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(WrappedInput, _React$Component);\n\n    function WrappedInput() {\n      _classCallCheck(this, WrappedInput);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(WrappedInput).apply(this, arguments));\n    }\n\n    _createClass(WrappedInput, [{\n      key: \"render\",\n      value: function render() {\n        var _cx;\n\n        var _this$props = this.props,\n            activeIndex = _this$props.activeIndex,\n            bsSize = _this$props.bsSize,\n            disabled = _this$props.disabled,\n            inputRef = _this$props.inputRef,\n            isFocused = _this$props.isFocused,\n            isInvalid = _this$props.isInvalid,\n            isMenuShown = _this$props.isMenuShown,\n            isValid = _this$props.isValid,\n            labelKey = _this$props.labelKey,\n            menuId = _this$props.menuId,\n            multiple = _this$props.multiple,\n            onBlur = _this$props.onBlur,\n            onChange = _this$props.onChange,\n            onFocus = _this$props.onFocus,\n            onKeyDown = _this$props.onKeyDown,\n            onRemove = _this$props.onRemove,\n            placeholder = _this$props.placeholder,\n            renderToken = _this$props.renderToken,\n            selected = _this$props.selected;\n        var _this$props$inputProp = this.props.inputProps,\n            autoComplete = _this$props$inputProp.autoComplete,\n            type = _this$props$inputProp.type; // Add a11y-related props.\n\n        var inputProps = _objectSpread({}, this.props.inputProps, {\n          'aria-activedescendant': activeIndex >= 0 ? (0, _utils.getMenuItemId)(activeIndex) : undefined,\n          'aria-autocomplete': multiple ? 'list' : 'both',\n          'aria-expanded': isMenuShown,\n          'aria-haspopup': 'listbox',\n          'aria-owns': isMenuShown ? menuId : undefined,\n          autoComplete: autoComplete || 'nope',\n          disabled: disabled,\n          inputRef: inputRef,\n          onBlur: onBlur,\n          onChange: onChange,\n          // Re-open the menu, eg: if it's closed via ESC.\n          onClick: onFocus,\n          onFocus: onFocus,\n          onKeyDown: onKeyDown,\n          placeholder: selected.length ? null : placeholder,\n          // Comboboxes are single-select by definition:\n          // https://www.w3.org/TR/wai-aria-practices-1.1/#combobox\n          role: 'combobox',\n          type: type || 'text',\n          value: (0, _utils.getInputText)(this.props)\n        });\n\n        var className = inputProps.className || '';\n\n        if (multiple) {\n          inputProps = _objectSpread({}, inputProps, {\n            'aria-expanded': undefined,\n            inputClassName: className,\n            labelKey: labelKey,\n            onRemove: onRemove,\n            renderToken: renderToken,\n            role: undefined,\n            selected: selected\n          });\n        }\n\n        return _react.default.createElement(Input, _extends({}, inputProps, {\n          className: (0, _classnames.default)('rbt-input', (_cx = {}, _defineProperty(_cx, className, !multiple), _defineProperty(_cx, \"focus\", isFocused), _defineProperty(_cx, 'input-lg form-control-lg', bsSize === 'large' || bsSize === 'lg'), _defineProperty(_cx, 'input-sm form-control-sm', bsSize === 'small' || bsSize === 'sm'), _defineProperty(_cx, 'is-invalid', isInvalid), _defineProperty(_cx, 'is-valid', isValid), _cx))\n        }));\n      }\n    }]);\n\n    return WrappedInput;\n  }(_react.default.Component);\n\n  _defineProperty(WrappedInput, \"displayName\", \"InputContainer(\".concat((0, _utils.getDisplayName)(Input), \")\"));\n\n  return WrappedInput;\n}\n\nvar _default = inputContainer;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}