{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\HP\\\\Desktop\\\\Flightbooking\\\\React-flight-booking-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport const transformFlightDates = flights => {\n  return flights.map(flight => {\n    return _objectSpread({}, flight, {\n      arrivalTimeStamp: new Date(\"\".concat(flight.date, \" \").concat(flight.arrivalTime)).getTime(),\n      departureTimeStamp: new Date(\"\".concat(flight.date, \" \").concat(flight.departureTime)).getTime()\n    });\n  });\n};\nexport const getTimeDifferece = timeDiff => {\n  const timeInHrs = Math.floor(timeDiff / 3600000);\n  const timeInMins = Math.round(timeDiff % 86400000 % 3600000 / 60000);\n  return \"\".concat(timeInHrs, \"h \").concat(timeInMins, \"m\");\n};","map":{"version":3,"sources":["C:\\Users\\HP\\Desktop\\Flightbooking\\React-flight-booking-master\\src\\lib\\utils.js"],"names":["transformFlightDates","flights","map","flight","arrivalTimeStamp","Date","date","arrivalTime","getTime","departureTimeStamp","departureTime","getTimeDifferece","timeDiff","timeInHrs","Math","floor","timeInMins","round"],"mappings":";AAAA,OAAO,MAAMA,oBAAoB,GAAIC,OAAD,IAAa;AAC/C,SAAOA,OAAO,CAACC,GAAR,CAAYC,MAAM,IAAI;AAC3B,6BACKA,MADL;AAEEC,MAAAA,gBAAgB,EAAE,IAAIC,IAAJ,WAAYF,MAAM,CAACG,IAAnB,cAA2BH,MAAM,CAACI,WAAlC,GAAiDC,OAAjD,EAFpB;AAGEC,MAAAA,kBAAkB,EAAE,IAAIJ,IAAJ,WAAYF,MAAM,CAACG,IAAnB,cAA2BH,MAAM,CAACO,aAAlC,GAAmDF,OAAnD;AAHtB;AAKD,GANM,CAAP;AAOD,CARM;AAUP,OAAO,MAAMG,gBAAgB,GAAIC,QAAD,IAAc;AAC5C,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAYH,QAAD,GAAa,OAAxB,CAAlB;AACA,QAAMI,UAAU,GAAGF,IAAI,CAACG,KAAL,CAAaL,QAAQ,GAAG,QAAZ,GAAwB,OAAzB,GAAoC,KAA/C,CAAnB;AACA,mBAAUC,SAAV,eAAwBG,UAAxB;AACD,CAJM","sourcesContent":["export const transformFlightDates = (flights) => {\n  return flights.map(flight => {\n    return {\n      ...flight,\n      arrivalTimeStamp: new Date(`${flight.date} ${flight.arrivalTime}`).getTime(),\n      departureTimeStamp: new Date(`${flight.date} ${flight.departureTime}`).getTime()\n    }\n  })\n};\n\nexport const getTimeDifferece = (timeDiff) => {\n  const timeInHrs = Math.floor((timeDiff) / 3600000);\n  const timeInMins = Math.round(((timeDiff % 86400000) % 3600000) / 60000);\n  return `${timeInHrs}h ${timeInMins}m`;\n}"]},"metadata":{},"sourceType":"module"}