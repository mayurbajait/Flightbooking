{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HP\\\\Desktop\\\\Flightbooking\\\\React-flight-booking-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Flightbooking\\\\React-flight-booking-master\\\\src\\\\components\\\\multi-flight-info\\\\multi-flight-info.js\";\nimport React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { DetailLabel } from './../detail-label/detail-label';\nimport { FlightInfo } from './../flight-info/flight-info';\nimport { PriceInfo } from './../price-info/price-info';\nimport { getTimeDifferece } from './../../lib/utils';\nimport multiFlightLogo from './../../assets/multiflight.png';\nimport './multi-flight-info.css';\nimport './../flight-info/flight-info.css';\n\nconst MultiFlightLogo = props => {\n  return React.createElement(\"img\", {\n    src: multiFlightLogo,\n    alt: \"multiple flights logo\",\n    width: \"32\",\n    height: \"32\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n};\n\nconst LayoverInfo = props => {\n  return React.createElement(\"p\", {\n    className: \"layover-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Layover of \", props.time);\n};\n\nexport const MultiFlightInfo = props => {\n  const _props$data = props.data,\n        _props$data$cumulativ = _props$data.cumulativeFlight,\n        departureTime = _props$data$cumulativ.departureTime,\n        origin = _props$data$cumulativ.origin,\n        arrivalTime = _props$data$cumulativ.arrivalTime,\n        destination = _props$data$cumulativ.destination,\n        totalFare = _props$data$cumulativ.totalFare,\n        arrivalTimeStamp = _props$data$cumulativ.arrivalTimeStamp,\n        departureTimeStamp = _props$data$cumulativ.departureTimeStamp,\n        dayChange = _props$data$cumulativ.dayChange,\n        flights = _props$data.flights;\n\n  const _useState = useState('Show Details'),\n        _useState2 = _slicedToArray(_useState, 2),\n        showHideLabel = _useState2[0],\n        toggleLabel = _useState2[1];\n\n  const timeDiff = arrivalTimeStamp - departureTimeStamp;\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"Flight-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(MultiFlightLogo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"detail-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Multiple\"), React.createElement(\"a\", {\n    href: \"!#\",\n    onClick: () => toggleLabel(showHideLabel === 'Show Details' ? 'Hide Details' : 'Show Details'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, showHideLabel)), React.createElement(DetailLabel, {\n    mainText: departureTime,\n    subText: origin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(DetailLabel, {\n    mainText: arrivalTime + (dayChange ? '(+1)' : ''),\n    subText: destination,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(DetailLabel, {\n    mainText: getTimeDifferece(timeDiff),\n    subText: 'Total Duration',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(PriceInfo, {\n    amount: totalFare,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outline-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Book\")), showHideLabel === 'Hide Details' && flights.map((flight, index) => {\n    const timeDiff = index < flights.length - 1 ? flights[index + 1].departureTimeStamp - flight.arrivalTimeStamp : null;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(FlightInfo, {\n      data: flight,\n      isMultiMode: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), timeDiff && React.createElement(LayoverInfo, {\n      time: getTimeDifferece(timeDiff),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }));\n};","map":{"version":3,"sources":["C:\\Users\\HP\\Desktop\\Flightbooking\\React-flight-booking-master\\src\\components\\multi-flight-info\\multi-flight-info.js"],"names":["React","useState","Card","Button","DetailLabel","FlightInfo","PriceInfo","getTimeDifferece","multiFlightLogo","MultiFlightLogo","props","LayoverInfo","time","MultiFlightInfo","data","cumulativeFlight","departureTime","origin","arrivalTime","destination","totalFare","arrivalTimeStamp","departureTimeStamp","dayChange","flights","showHideLabel","toggleLabel","timeDiff","map","flight","index","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { DetailLabel } from './../detail-label/detail-label';\nimport { FlightInfo } from './../flight-info/flight-info';\nimport { PriceInfo } from './../price-info/price-info';\nimport { getTimeDifferece } from './../../lib/utils';\nimport multiFlightLogo from './../../assets/multiflight.png';\nimport './multi-flight-info.css';\nimport './../flight-info/flight-info.css';\n\nconst MultiFlightLogo = (props) => {\n  return <img src={multiFlightLogo} alt=\"multiple flights logo\" width=\"32\" height=\"32\" />\n}\n\nconst LayoverInfo = (props) => {\n  return (\n    <p className=\"layover-info\">\n      Layover of {props.time}\n    </p>\n  )  \n}\n\nexport const MultiFlightInfo = (props) => {\n  const { cumulativeFlight: { departureTime, origin, arrivalTime, destination, totalFare, arrivalTimeStamp, departureTimeStamp, dayChange }, flights } = props.data;\n  const [ showHideLabel, toggleLabel ] = useState('Show Details');\n  const timeDiff = arrivalTimeStamp - departureTimeStamp;\n  return (\n    <Card>\n      <section className=\"Flight-info\">\n        <MultiFlightLogo></MultiFlightLogo>\n        <div className=\"detail-label\">\n          <h4>Multiple</h4>\n          <a href=\"!#\" onClick={() => toggleLabel( showHideLabel === 'Show Details' ? 'Hide Details' : 'Show Details') }>\n            {showHideLabel}\n          </a>\n        </div>\n        <DetailLabel mainText={departureTime} subText={origin} ></DetailLabel>\n        <DetailLabel mainText={arrivalTime + (dayChange ? '(+1)': '')} subText={destination} ></DetailLabel>\n        <DetailLabel mainText={getTimeDifferece(timeDiff)} subText={'Total Duration'} ></DetailLabel>\n        <PriceInfo amount={totalFare} />\n        <Button variant=\"outline-danger\">Book</Button>\n      </section>\n      { showHideLabel === 'Hide Details' && flights.map((flight, index) => {\n        const timeDiff = index < flights.length -1 ? flights[index+1].departureTimeStamp - flight.arrivalTimeStamp : null;\n        return (\n          <React.Fragment>\n            <FlightInfo data={flight} isMultiMode={true} ></FlightInfo>\n            {timeDiff && <LayoverInfo time={getTimeDifferece(timeDiff)}></LayoverInfo> }\n          </React.Fragment>  \n        );\n      })}\n    </Card>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}