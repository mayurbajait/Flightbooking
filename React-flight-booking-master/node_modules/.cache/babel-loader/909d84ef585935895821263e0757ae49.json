{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _debounce = _interopRequireDefault(require(\"lodash/debounce\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes2 = require(\"../propTypes\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar DEFAULT_DELAY_MS = 200;\n/**\n * HoC that encapsulates common behavior and functionality for doing\n * asynchronous searches, including:\n *\n *  - Debouncing user input\n *  - Optional query caching\n *  - Search prompt and empty results behaviors\n */\n\nvar asyncContainer = function asyncContainer(Typeahead) {\n  var WrappedTypeahead =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(WrappedTypeahead, _React$Component);\n\n    function WrappedTypeahead() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, WrappedTypeahead);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WrappedTypeahead)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_cache\", {});\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_query\", '');\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_getEmptyLabel\", function () {\n        var _this$props = _this.props,\n            emptyLabel = _this$props.emptyLabel,\n            isLoading = _this$props.isLoading,\n            promptText = _this$props.promptText,\n            searchText = _this$props.searchText;\n\n        if (!_this._query.length) {\n          return promptText;\n        }\n\n        if (isLoading) {\n          return searchText;\n        }\n\n        return emptyLabel;\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_handleInputChange\", function (query, e) {\n        _this.props.onInputChange && _this.props.onInputChange(query, e);\n\n        _this._handleSearchDebounced(query);\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_handleSearch\", function (query) {\n        _this._query = query;\n        var _this$props2 = _this.props,\n            minLength = _this$props2.minLength,\n            onSearch = _this$props2.onSearch,\n            useCache = _this$props2.useCache;\n\n        if (!query || minLength && query.length < minLength) {\n          return;\n        } // Use cached results, if applicable.\n\n\n        if (useCache && _this._cache[query]) {\n          // Re-render the component with the cached results.\n          _this.forceUpdate();\n\n          return;\n        } // Perform the search.\n\n\n        onSearch(query);\n      });\n\n      return _this;\n    }\n\n    _createClass(WrappedTypeahead, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._handleSearchDebounced = (0, _debounce.default)(this._handleSearch, this.props.delay);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps, prevState) {\n        if (prevProps.isLoading && this.props.useCache) {\n          this._cache[this._query] = this.props.options;\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._cache = {};\n        this._query = '';\n\n        this._handleSearchDebounced.cancel();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props3 = this.props,\n            options = _this$props3.options,\n            useCache = _this$props3.useCache,\n            props = _objectWithoutProperties(_this$props3, [\"options\", \"useCache\"]);\n\n        var cachedQuery = this._cache[this._query]; // Disable custom selections during a search unless `allowNew` is a\n        // function.\n\n        var allowNew = typeof props.allowNew === 'function' ? props.allowNew : props.allowNew && !props.isLoading;\n        return _react.default.createElement(Typeahead, _extends({}, props, {\n          allowNew: allowNew,\n          emptyLabel: this._getEmptyLabel(),\n          onInputChange: this._handleInputChange,\n          options: useCache && cachedQuery ? cachedQuery : options,\n          ref: function ref(instance) {\n            return _this2._instance = instance;\n          }\n        }));\n      }\n      /**\n       * Make the component instance available.\n       */\n\n    }, {\n      key: \"getInstance\",\n      value: function getInstance() {\n        return this._instance;\n      }\n    }]);\n\n    return WrappedTypeahead;\n  }(_react.default.Component);\n\n  WrappedTypeahead.displayName = \"AsyncContainer(\".concat((0, _utils.getDisplayName)(Typeahead), \")\");\n  WrappedTypeahead.propTypes = {\n    /**\n     * Delay, in milliseconds, before performing search.\n     */\n    delay: _propTypes.default.number,\n\n    /**\n     * Whether or not a request is currently pending. Necessary for the\n     * container to know when new results are available.\n     */\n    isLoading: _propTypes.default.bool.isRequired,\n\n    /**\n     * Number of input characters that must be entered before showing results.\n     */\n    minLength: _propTypes.default.number,\n\n    /**\n     * Callback to perform when the search is executed.\n     */\n    onSearch: _propTypes.default.func.isRequired,\n\n    /**\n     * Options to be passed to the typeahead. Will typically be the query\n     * results, but can also be initial default options.\n     */\n    options: _propTypes2.optionType,\n\n    /**\n     * Message displayed in the menu when there is no user input.\n     */\n    promptText: _propTypes.default.node,\n\n    /**\n     * Message displayed in the menu while the request is pending.\n     */\n    searchText: _propTypes.default.node,\n\n    /**\n     * Whether or not the component should cache query results.\n     */\n    useCache: _propTypes.default.bool\n  };\n  WrappedTypeahead.defaultProps = {\n    delay: DEFAULT_DELAY_MS,\n    minLength: 2,\n    options: [],\n    promptText: 'Type to search...',\n    searchText: 'Searching...',\n    useCache: true\n  };\n  return WrappedTypeahead;\n};\n\nvar _default = asyncContainer;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}