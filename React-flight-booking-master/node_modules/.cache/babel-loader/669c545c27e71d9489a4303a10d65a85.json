{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Stripped-down version of https://github.com/helior/react-highlighter\n *\n * Results are already filtered by the time the component is used internally so\n * we can safely ignore case and diacritical marks for the purposes of matching.\n */\n\n\nvar Highlighter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Highlighter, _React$Component);\n\n  function Highlighter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Highlighter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Highlighter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_count\", 0);\n\n    return _this;\n  }\n\n  _createClass(Highlighter, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.search ? this._renderHighlightedChildren() : this.props.children;\n      return _react.default.createElement(\"span\", null, children);\n    }\n  }, {\n    key: \"_renderHighlightedChildren\",\n    value: function _renderHighlightedChildren() {\n      var children = [];\n      var remaining = this.props.children;\n\n      while (remaining) {\n        var bounds = (0, _utils.getMatchBounds)(remaining, this.props.search);\n\n        if (!bounds) {\n          this._count += 1;\n          children.push(_react.default.createElement(\"span\", {\n            key: this._count\n          }, remaining));\n          return children;\n        } // Capture the string that leads up to a match...\n\n\n        var nonMatch = remaining.slice(0, bounds.start);\n\n        if (nonMatch) {\n          this._count += 1;\n          children.push(_react.default.createElement(\"span\", {\n            key: this._count\n          }, nonMatch));\n        } // Now, capture the matching string...\n\n\n        var match = remaining.slice(bounds.start, bounds.end);\n\n        if (match) {\n          this._count += 1;\n          children.push(_react.default.createElement(\"mark\", {\n            className: \"rbt-highlight-text\",\n            key: this._count\n          }, match));\n        } // And if there's anything left over, continue the loop.\n\n\n        remaining = remaining.slice(bounds.end);\n      }\n\n      return children;\n    }\n  }]);\n\n  return Highlighter;\n}(_react.default.Component);\n\nHighlighter.propTypes = {\n  children: _propTypes.default.string.isRequired,\n  search: _propTypes.default.string.isRequired\n};\nvar _default = Highlighter;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}