{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _AutosizeInput = _interopRequireDefault(require(\"../AutosizeInput.react\"));\n\nvar _TypeaheadContext = require(\"../TypeaheadContext\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // IE doesn't seem to get the composite computed value (eg: 'padding',\n// 'borderStyle', etc.), so generate these from the individual values.\n\n\nfunction interpolateStyle(styles, attr) {\n  var subattr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ''; // Title-case the sub-attribute.\n\n  if (subattr) {\n    /* eslint-disable-next-line no-param-reassign */\n    subattr = subattr.replace(subattr[0], subattr[0].toUpperCase());\n  }\n\n  return ['Top', 'Right', 'Bottom', 'Left'].map(function (dir) {\n    return styles[attr + dir + subattr];\n  }).join(' ');\n}\n\nfunction copyStyles(inputNode, hintNode) {\n  var inputStyle = window.getComputedStyle(inputNode);\n  /* eslint-disable no-param-reassign */\n\n  hintNode.style.borderStyle = interpolateStyle(inputStyle, 'border', 'style');\n  hintNode.style.borderWidth = interpolateStyle(inputStyle, 'border', 'width');\n  hintNode.style.fontSize = inputStyle.fontSize;\n  hintNode.style.lineHeight = inputStyle.lineHeight;\n  hintNode.style.margin = interpolateStyle(inputStyle, 'margin');\n  hintNode.style.padding = interpolateStyle(inputStyle, 'padding');\n  /* eslint-enable no-param-reassign */\n}\n\nfunction hintContainer(Input) {\n  var HintedInput =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(HintedInput, _React$Component);\n\n    function HintedInput() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, HintedInput);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HintedInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_handleKeyDown\", function (e) {\n        var _this$props = _this.props,\n            initialItem = _this$props.initialItem,\n            onAdd = _this$props.onAdd,\n            onKeyDown = _this$props.onKeyDown;\n\n        if ((0, _utils.shouldSelectHint)(e, _this.props)) {\n          e.preventDefault(); // Prevent input from blurring on TAB.\n\n          onAdd(initialItem);\n        }\n\n        onKeyDown(e);\n      });\n\n      return _this;\n    }\n\n    _createClass(HintedInput, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        copyStyles(this._input, this._hint);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        copyStyles(this._input, this._hint);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props2 = this.props,\n            hintText = _this$props2.hintText,\n            initialItem = _this$props2.initialItem,\n            _inputRef = _this$props2.inputRef,\n            onAdd = _this$props2.onAdd,\n            selectHintOnEnter = _this$props2.selectHintOnEnter,\n            props = _objectWithoutProperties(_this$props2, [\"hintText\", \"initialItem\", \"inputRef\", \"onAdd\", \"selectHintOnEnter\"]);\n\n        return _react.default.createElement(\"div\", {\n          className: \"rbt-input-hint-container\",\n          style: {\n            position: 'relative'\n          }\n        }, _react.default.createElement(Input, _extends({}, props, {\n          inputRef: function inputRef(input) {\n            _this2._input = input;\n\n            _inputRef(input);\n          },\n          onKeyDown: this._handleKeyDown\n        })), _react.default.createElement(_AutosizeInput.default, {\n          \"aria-hidden\": true,\n          className: \"rbt-input-hint\",\n          inputRef: function inputRef(hint) {\n            return _this2._hint = hint;\n          },\n          inputStyle: {\n            backgroundColor: 'transparent',\n            borderColor: 'transparent',\n            boxShadow: 'none',\n            color: 'rgba(0, 0, 0, 0.35)'\n          },\n          readOnly: true,\n          style: {\n            left: 0,\n            pointerEvents: 'none',\n            position: 'absolute',\n            top: 0\n          },\n          tabIndex: -1,\n          value: hintText\n        }));\n      }\n    }]);\n\n    return HintedInput;\n  }(_react.default.Component);\n\n  _defineProperty(HintedInput, \"displayName\", \"HintContainer(\".concat((0, _utils.getDisplayName)(Input), \")\"));\n\n  return (0, _TypeaheadContext.withContext)(HintedInput, ['hintText', 'initialItem', 'onAdd', 'selectHintOnEnter']);\n}\n\nvar _default = hintContainer;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}