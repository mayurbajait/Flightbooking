{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _noop = _interopRequireDefault(require(\"lodash/noop\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _componentOrElement = _interopRequireDefault(require(\"prop-types-extra/lib/componentOrElement\"));\n\nvar _Portal = _interopRequireDefault(require(\"react-overlays/lib/Portal\"));\n\nvar _Popper = _interopRequireDefault(require(\"react-popper/lib/cjs/Popper\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar BODY_CLASS = 'rbt-body-container';\n\nfunction getModifiers(_ref) {\n  var align = _ref.align,\n      flip = _ref.flip;\n  return {\n    computeStyles: {\n      enabled: true,\n      fn: function fn(data) {\n        // Use the following condition instead of `align === 'justify'` since\n        // it allows the component to fall back to justifying the menu width\n        // even when `align` is undefined.\n        if (align !== 'right' && align !== 'left') {\n          // Set the popper width to match the target width.\n\n          /* eslint-disable-next-line no-param-reassign */\n          data.styles.width = data.offsets.reference.width;\n        }\n\n        return data;\n      }\n    },\n    flip: {\n      enabled: flip\n    },\n    preventOverflow: {\n      escapeWithReference: true\n    }\n  };\n}\n\nfunction isBody(container) {\n  return container === document.body;\n}\n/**\n * Custom `Overlay` component, since the version in `react-overlays` doesn't\n * work for our needs. Specifically, the `Position` component doesn't provide\n * the customized placement we need.\n */\n\n\nvar Overlay =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Overlay, _React$Component);\n\n  function Overlay() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Overlay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Overlay)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_update\", function () {\n      var _container$classList;\n\n      var _this$props = _this.props,\n          className = _this$props.className,\n          container = _this$props.container,\n          show = _this$props.show;\n\n      if (!(show && isBody(container))) {\n        return;\n      } // Set a classname on the body for scoping purposes.\n\n\n      container.classList.add(BODY_CLASS);\n      !!className && (_container$classList = container.classList).add.apply(_container$classList, _toConsumableArray(className.split(' ')));\n    });\n\n    return _this;\n  }\n\n  _createClass(Overlay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._update();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props2 = this.props,\n          onMenuHide = _this$props2.onMenuHide,\n          onMenuShow = _this$props2.onMenuShow,\n          onMenuToggle = _this$props2.onMenuToggle,\n          show = _this$props2.show;\n\n      if (show !== prevProps.show) {\n        show ? onMenuShow() : onMenuHide();\n        onMenuToggle(show);\n      } // Remove scoping classes if menu isn't being appended to document body.\n\n\n      var className = prevProps.className,\n          container = prevProps.container;\n\n      if (isBody(container) && !isBody(this.props.container)) {\n        var _container$classList2;\n\n        container.classList.remove(BODY_CLASS);\n        !!className && (_container$classList2 = container.classList).remove.apply(_container$classList2, _toConsumableArray(className.split(' ')));\n      }\n\n      this._update();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          align = _this$props3.align,\n          children = _this$props3.children,\n          container = _this$props3.container,\n          dropup = _this$props3.dropup,\n          referenceElement = _this$props3.referenceElement,\n          show = _this$props3.show;\n\n      if (!(show && _react.Children.count(children))) {\n        return null;\n      }\n\n      var child = _react.Children.only(children);\n\n      var xPlacement = align === 'right' ? 'end' : 'start';\n      var yPlacement = dropup ? 'top' : 'bottom';\n      return _react.default.createElement(_Portal.default, {\n        container: container\n      }, _react.default.createElement(_Popper.default, {\n        modifiers: getModifiers(this.props),\n        placement: \"\".concat(yPlacement, \"-\").concat(xPlacement),\n        referenceElement: referenceElement\n      }, function (_ref2) {\n        var ref = _ref2.ref,\n            props = _objectWithoutProperties(_ref2, [\"ref\"]);\n\n        return (0, _react.cloneElement)(child, _objectSpread({}, child.props, props, {\n          innerRef: ref,\n          inputHeight: referenceElement ? referenceElement.offsetHeight : 0\n        }));\n      }));\n    }\n  }]);\n\n  return Overlay;\n}(_react.default.Component);\n\nOverlay.propTypes = {\n  children: _propTypes.default.element,\n  container: _componentOrElement.default.isRequired,\n  onMenuHide: _propTypes.default.func,\n  onMenuShow: _propTypes.default.func,\n  onMenuToggle: _propTypes.default.func,\n  referenceElement: _componentOrElement.default,\n  show: _propTypes.default.bool\n};\nOverlay.defaultProps = {\n  onMenuHide: _noop.default,\n  onMenuShow: _noop.default,\n  onMenuToggle: _noop.default,\n  show: false\n};\nvar _default = Overlay;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}